{"version":3,"sources":["api/api.js","store/loading.js","store/actions.js","store/loadingError.js","store/users.js","store/store.js","const/const.js","Components/User.js","Components/UsersTable.js","Components/Pagination.js","Components/App.js","index.js"],"names":["getUsersFromServer","users","regenerator_default","a","async","_context","prev","next","awrap","fetch","sent","abrupt","json","stop","loadingReducer","state","arguments","length","undefined","type","errorReducer","usersReducer","action","getIsLoading","isLoading","getLoadingError","loadingError","getUsers","getUsersCount","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","TABLE_HEADERS","id","name","surname","desc","User","_ref","user","react_default","createElement","className","Object","keys","map","header","cn","table__cell","table__cell_desc","key","connect","withRouter","location","visibleUsers","filter","i","Math","floor","pathname","split","Components_User","usersCount","activePage","pageNumber","ceil","firstItemShown","lastItemShown","concat","react_router_dom","to","replace","pagination__button pagination__button_prev","pagination__button_disabled","onClick","event","preventDefault","toConsumableArray","Array","page","activeClassName","pagination__button","App","fetchUsers","this","props","prevProps","_this$props","history","test","slice","push","_this$props2","react_loader_spinner_default","color","Fragment","Components_UsersTable","Components_Pagination","React","Component","dispatch","usersFromServer","t0","ReactDOM","render","es","Components_App","document","getElementById"],"mappings":"6OAEaA,EAAqB,eAAAC,EAAA,OAAAC,EAAAC,EAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAAL,EAAAC,EAAAK,MACZC,MAHJ,qEAEgB,cAC1BR,EAD0BI,EAAAK,KAAAL,EAAAM,OAAA,SAGzBV,EAAMW,QAHmB,wBAAAP,EAAAQ,WCYnBC,EAZQ,WAA2B,IAA1BC,EAA0BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAChD,QADgDA,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GACjCC,MACb,ICFyB,gBDGvB,OAAO,EACT,ICFwB,eDGxB,ICJ0B,iBDKxB,OAAO,EACT,QACE,OAAOJ,IEEEK,EAVM,WAA2B,IAA1BL,EAA0BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC9C,QAD8CA,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAC/BC,MACb,IDAwB,eCCtB,OAAO,EAET,QACE,OAAOJ,ICIEM,EAVM,WAAwB,IAAvBN,EAAuBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAf,GAAIM,EAAWN,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C,OAAQI,EAAOH,MACb,IFD0B,iBEExB,OAAOG,EAAOrB,MAEhB,QACE,OAAOc,ICFAQ,EAAe,SAAAR,GAAK,OAAIA,EAAMS,WAC9BC,EAAkB,SAAAV,GAAK,OAAIA,EAAMW,cACjCC,EAAW,SAAAZ,GAAK,OAAIA,EAAMd,OAC1B2B,EAAgB,SAAAb,GAAK,OAAIY,EAASZ,GAAOE,QAQhDY,EAAcC,YAAgB,CAClC7B,MAAOoB,EACPG,UAAWV,EACXY,aAAcN,IAKDW,EAFDC,YAAYH,EAZL,CACnB5B,MAAO,GACPuB,WAAW,EACXE,cAAc,GASqCO,YAAgBC,uECtBxDC,EAAgB,CAC3BC,GAAI,KACJC,KAAM,OACNC,QAAS,UACTC,KAAM,gCCgBOC,EAhBF,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACXC,EAAAxC,EAAAyC,cAAA,MAAIC,UAAU,cACXC,OAAOC,KAAKZ,GAAea,IAAI,SAAAC,GAAM,OACpCN,EAAAxC,EAAAyC,cAAA,MACEC,UAAWK,IAAG,CACZC,aAAa,EACbC,iBAA6B,SAAXH,IAEpBI,IAAKJ,GAEJP,EAAKO,QC4BCK,cAJS,SAAAvC,GAAK,MAAK,CAChCd,MAAO0B,EAASZ,KAGsB,KAAzBuC,CAA+BC,YAnC3B,SAAAd,GAAyB,IAAtBxC,EAAsBwC,EAAtBxC,MAAOuD,EAAef,EAAfe,SACrBC,EAAexD,EAClByD,OAAO,SAAChB,EAAMiB,GAAP,OAAcC,KACnBC,MAAMF,EFXiB,GEWK,KAAOH,EAASM,SAASC,MAAM,KAAK,KAErE,OACEpB,EAAAxC,EAAAyC,cAAA,SAAOC,UAAU,SACfF,EAAAxC,EAAAyC,cAAA,aACED,EAAAxC,EAAAyC,cAAA,UACGE,OAAOC,KAAKZ,GAAea,IAAI,SAAAC,GAAM,OACpCN,EAAAxC,EAAAyC,cAAA,MACES,IAAKlB,EAAcc,GACnBJ,UAAU,oBAETV,EAAcc,QAKvBN,EAAAxC,EAAAyC,cAAA,aACGa,EAAaT,IAAI,SAAAN,GAAI,OACpBC,EAAAxC,EAAAyC,cAACoB,EAAD,CACEX,IAAKX,EAAKN,GACVM,KAAMA,mBC2CHY,cAJS,SAAAvC,GAAK,MAAK,CAChCkD,WAAYrC,EAAcb,KAGY,KAAzBuC,CAA+BC,YAlE3B,SAAAd,GAA8B,IAA3BwB,EAA2BxB,EAA3BwB,WACdC,GADyCzB,EAAfe,SACHM,SAASC,MAAM,KAAK,GAC3CI,EAAaP,KAAKQ,KAAKH,EHVD,GGWtBI,EHXsB,EGWYH,EAAjB,EACjBI,EHZsB,EGYWJ,EAAaD,EAChDA,EHbwB,EGcPC,EAErB,OACEvB,EAAAxC,EAAAyC,cAAA,UAAQC,UAAU,UAChBF,EAAAxC,EAAAyC,cAAA,oBAAA2B,OACcF,EADd,iBAAAE,OAEID,EAFJ,QAAAC,OAEwBN,EAFxB,aAIAtB,EAAAxC,EAAAyC,cAAA,MAAIC,UAAU,cACZF,EAAAxC,EAAAyC,cAAC4B,EAAA,EAAD,CACEC,GAAE,GAAAF,OAAKL,EAAa,GACpBQ,SAAO,EACP7B,UAAWK,IAAG,CACZyB,8CAA8C,EAC9CC,4BAA4C,IAAfV,IAE/BW,QAAS,SAACC,GACW,IAAfZ,GACFY,EAAMC,mBATZ,YAeCjC,OAAAkC,EAAA,EAAAlC,CAAImC,MAAMd,GAAYpB,QAAQC,IAAI,SAAAkC,GAAI,OACrCvC,EAAAxC,EAAAyC,cAAA,MAAIS,IAAK6B,GACPvC,EAAAxC,EAAAyC,cAAC4B,EAAA,EAAD,CACEC,GAAE,GAAAF,OAAKW,EAAO,GACdR,SAAO,EACP7B,UAAU,qBACVsC,gBAAgB,6BAEfD,EAAO,MAIdvC,EAAAxC,EAAAyC,cAAC4B,EAAA,EAAD,CACEC,GAAE,GAAAF,OAAKL,EAAa,GACpBQ,SAAO,EACP7B,UAAWK,IAAG,CACZkC,oBAAoB,EACpBR,4BAA6BV,IAAeC,IAE9CU,QAAS,SAACC,GACJZ,IAAeC,GACjBW,EAAMC,mBATZ,aCvCFM,sMAIFC,EAFuBC,KAAKC,MAApBF,yDAKSG,GAAW,IAAAC,EACEH,KAAKC,MAA3BG,EADoBD,EACpBC,QAASnC,EADWkC,EACXlC,SAEgB,IAA7BA,EAASM,SAAS7C,QAChB,QAAQ2E,KAAKpC,EAASM,SAAS+B,OAAO,KAC1CF,EAAQG,KAAK,CAAEhC,SAAU,wCAIpB,IAAAiC,EACyCR,KAAKC,MAA7ChE,EADDuE,EACCvE,UAAWE,EADZqE,EACYrE,aAAcuC,EAD1B8B,EAC0B9B,WAEjC,OAAIzC,EAEAmB,EAAAxC,EAAAyC,cAACoD,EAAA7F,EAAD,CAAQ0C,UAAU,UAAU1B,KAAK,YAAY8E,MAAM,YAInDvE,EAEAiB,EAAAxC,EAAAyC,cAAA,KAAGC,UAAU,iBAAb,gCAKFF,EAAAxC,EAAAyC,cAAA,OAAKC,UAAU,OACZoB,GACCtB,EAAAxC,EAAAyC,cAAAD,EAAAxC,EAAA+F,SAAA,KACEvD,EAAAxC,EAAAyC,cAAA,yBACAD,EAAAxC,EAAAyC,cAACuD,EAAD,MACAxD,EAAAxC,EAAAyC,cAACwD,EAAD,eArCMC,IAAMC,YAmDThD,cANS,SAAAvC,GAAK,MAAK,CAChCS,UAAWD,EAAaR,GACxBW,aAAcD,EAAgBV,GAC9BkD,WAAYrC,EAAcb,KAK1B,CAAEuE,WRlDqB,kBAAM,SAAMiB,GAAN,IAAAC,EAAA,OAAAtG,EAAAC,EAAAC,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAC7BgG,EATiC,CAAEpF,KAJR,kBAYEd,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAAAL,EAAAC,EAAAK,MAIGR,KAJH,OAIrBwG,EAJqBnG,EAAAK,KAM3B6F,EAXmC,CACrCpF,KAP4B,iBAQ5BlB,MASyBuG,IANInG,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAoG,GAAApG,EAAA,SAQ3BkG,EAf8B,CAAEpF,KAHR,iBAUG,yBAAAd,EAAAQ,SAAA,sBQgDhByC,CAGbC,YAAW8B,IC1DbqB,IAASC,OACPhE,EAAAxC,EAAAyC,cAACgE,EAAA,EAAD,CAAU7E,MAAOA,GACfY,EAAAxC,EAAAyC,cAAC4B,EAAA,EAAD,KACE7B,EAAAxC,EAAAyC,cAACiE,EAAD,QAGJC,SAASC,eAAe","file":"static/js/main.8df60c38.chunk.js","sourcesContent":["const URL_USERS = 'https://my-json-server.typicode.com/AnnaGerdii/users-table/users';\n\nexport const getUsersFromServer = async() => {\n  const users = await fetch(URL_USERS);\n\n  return users.json();\n};\n","import { START_LOADING, HANDLE_SUCCESS, HANDLE_ERROR } from './actions';\n\nconst loadingReducer = (state = false, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return true;\n    case HANDLE_ERROR:\n    case HANDLE_SUCCESS:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default loadingReducer;\n","import { getUsersFromServer } from '../api/api';\n\nexport const START_LOADING = 'START_LOADING';\nexport const HANDLE_SUCCESS = 'HANDLE_SUCCESS';\nexport const HANDLE_ERROR = 'HANDLE_ERROR';\n\nexport const startLoading = () => ({ type: START_LOADING });\nexport const handleError = () => ({ type: HANDLE_ERROR });\n\nexport const handleSuccess = users => ({\n  type: HANDLE_SUCCESS,\n  users,\n});\n\nexport const loadUsers = () => async(dispatch) => {\n  dispatch(startLoading());\n\n  try {\n    const usersFromServer = await getUsersFromServer();\n\n    dispatch(handleSuccess(usersFromServer));\n  } catch {\n    dispatch(handleError());\n  }\n};\n","import { HANDLE_ERROR } from './actions';\n\nconst errorReducer = (state = false, action) => {\n  switch (action.type) {\n    case HANDLE_ERROR:\n      return true;\n\n    default:\n      return state;\n  }\n};\n\nexport default errorReducer;\n","import { HANDLE_SUCCESS } from './actions';\n\nconst usersReducer = (state = [], action) => {\n  switch (action.type) {\n    case HANDLE_SUCCESS:\n      return action.users;\n\n    default:\n      return state;\n  }\n};\n\nexport default usersReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport loadingReducer from './loading';\nimport errorReducer from './loadingError';\nimport usersReducer from './users';\n\nexport const getIsLoading = state => state.isLoading;\nexport const getLoadingError = state => state.loadingError;\nexport const getUsers = state => state.users;\nexport const getUsersCount = state => getUsers(state).length;\n\nconst initialState = {\n  users: [],\n  isLoading: false,\n  loadingError: false,\n};\n\nconst rootReducer = combineReducers({\n  users: usersReducer,\n  isLoading: loadingReducer,\n  loadingError: errorReducer,\n});\n\nconst store = createStore(rootReducer, initialState, applyMiddleware(thunk));\n\nexport default store;\n","export const ITEMS_PER_PAGE = 5;\nexport const TABLE_HEADERS = {\n  id: 'id',\n  name: 'name',\n  surname: 'surname',\n  desc: 'description',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cn from 'classnames';\nimport { TABLE_HEADERS } from '../const/const';\n\nconst User = ({ user }) => (\n  <tr className=\"table__row\">\n    {Object.keys(TABLE_HEADERS).map(header => (\n      <td\n        className={cn({\n          table__cell: true,\n          table__cell_desc: header === 'desc',\n        })}\n        key={header}\n      >\n        {user[header]}\n      </td>\n    ))}\n  </tr>\n);\n\nexport default User;\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    surname: PropTypes.string.isRequired,\n    desc: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { getUsers } from '../store/store';\nimport { TABLE_HEADERS, ITEMS_PER_PAGE } from '../const/const';\nimport User from './User';\n\nconst UsersTable = ({ users, location }) => {\n  const visibleUsers = users\n    .filter((user, i) => (Math\n      .floor(i / ITEMS_PER_PAGE) + 1 === +location.pathname.split('/')[1]));\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          {Object.keys(TABLE_HEADERS).map(header => (\n            <td\n              key={TABLE_HEADERS[header]}\n              className=\"table__head-cell\"\n            >\n              {TABLE_HEADERS[header]}\n            </td>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {visibleUsers.map(user => (\n          <User\n            key={user.id}\n            user={user}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nconst mapStateToProps = state => ({\n  users: getUsers(state),\n});\n\nexport default connect(mapStateToProps, null)(withRouter(UsersTable));\n\nUsersTable.propTypes = {\n  users: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n  })).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport cn from 'classnames';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { getUsersCount } from '../store/store';\nimport { ITEMS_PER_PAGE } from '../const/const';\n\nconst Pagination = ({ usersCount, location }) => {\n  const activePage = +location.pathname.split('/')[1];\n  const pageNumber = Math.ceil(usersCount / ITEMS_PER_PAGE);\n  const firstItemShown = ITEMS_PER_PAGE * activePage - (ITEMS_PER_PAGE - 1);\n  const lastItemShown = ITEMS_PER_PAGE * activePage > usersCount\n    ? usersCount\n    : ITEMS_PER_PAGE * activePage;\n\n  return (\n    <footer className=\"footer\">\n      <p>\n        {`Showing ${firstItemShown} to\n        ${lastItemShown} of ${usersCount} entries`}\n      </p>\n      <ul className=\"pagination\">\n        <NavLink\n          to={`${activePage - 1}`}\n          replace\n          className={cn({\n            'pagination__button pagination__button_prev': true,\n            pagination__button_disabled: activePage === 1,\n          })}\n          onClick={(event) => {\n            if (activePage === 1) {\n              event.preventDefault();\n            }\n          }}\n        >\n          Previous\n        </NavLink>\n        {[...Array(pageNumber).keys()].map(page => (\n          <li key={page}>\n            <NavLink\n              to={`${page + 1}`}\n              replace\n              className=\"pagination__button\"\n              activeClassName=\"pagination__button_active\"\n            >\n              {page + 1}\n            </NavLink>\n          </li>\n        ))}\n        <NavLink\n          to={`${activePage + 1}`}\n          replace\n          className={cn({\n            pagination__button: true,\n            pagination__button_disabled: activePage === pageNumber,\n          })}\n          onClick={(event) => {\n            if (activePage === pageNumber) {\n              event.preventDefault();\n            }\n          }}\n        >\n          Next\n        </NavLink>\n      </ul>\n    </footer>\n  );\n};\n\nconst mapStateToProps = state => ({\n  usersCount: getUsersCount(state),\n});\n\nexport default connect(mapStateToProps, null)(withRouter(Pagination));\n\nPagination.propTypes = {\n  usersCount: PropTypes.number.isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from 'react-loader-spinner';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getIsLoading, getUsersCount, getLoadingError } from '../store/store';\nimport { loadUsers } from '../store/actions';\nimport UsersTable from './UsersTable';\nimport Pagination from './Pagination';\nimport '../styles/App.scss';\n\nclass App extends React.Component {\n  componentDidMount() {\n    const { fetchUsers } = this.props;\n\n    fetchUsers();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { history, location } = this.props;\n\n    if (location.pathname.length !== 2\n      || !/[1-4]/.test(location.pathname.slice(-1))) {\n      history.push({ pathname: '/1' });\n    }\n  }\n\n  render() {\n    const { isLoading, loadingError, usersCount } = this.props;\n\n    if (isLoading) {\n      return (\n        <Loader className=\"spinner\" type=\"ThreeDots\" color=\"#324960\" />\n      );\n    }\n\n    if (loadingError) {\n      return (\n        <p className=\"error-message\">Sorry, something went wrong.</p>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        {usersCount && (\n          <>\n            <h1>Users Table</h1>\n            <UsersTable />\n            <Pagination />\n          </>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isLoading: getIsLoading(state),\n  loadingError: getLoadingError(state),\n  usersCount: getUsersCount(state),\n});\n\nexport default connect(\n  mapStateToProps,\n  { fetchUsers: loadUsers }\n)(withRouter(App));\n\nApp.propTypes = {\n  isLoading: PropTypes.bool.isRequired,\n  loadingError: PropTypes.bool.isRequired,\n  usersCount: PropTypes.number.isRequired,\n  fetchUsers: PropTypes.func.isRequired,\n  history: PropTypes.shape({ push: PropTypes.func.isRequired }).isRequired,\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport store from './store/store';\nimport App from './Components/App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}